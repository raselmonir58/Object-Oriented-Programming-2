<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZI//2Q==
</value>
  </data>
</root>